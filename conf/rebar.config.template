% This is a configuration file of rebar3, so that Ceylan-Seaplus can better
% integrate in the current OTP ecosystem, despite its (more complex, probably
% more flexible) native build based on GNU make.
%
% If the name of this file is 'rebar.config', then it is a generated file,
% otherwise it is a template (located in conf/rebar.config.template), meant to
% be filled by information determined at build time or coming from
% GNUmakevars.inc.
%
% See the Myriad counterpart file (same name) for more explanations.


% Base layout obtained thanks to: 'rebar3 new lib seaplus', as Seaplus is a
% library OTP application (without supervision trees).

% To be taken into account, from the library root, through 'make
% rebar3-application' or 'make rebar3-release'.


% Settings for the 'default' profile follow.


% Depends on the Ceylan-Myriad OTP library application (Erlang implied):

% As a GIT-based dependency:
{deps, [ {myriad, {git, "git://github.com/Olivier-Boudeville/Ceylan-Myriad",
					{branch, "master"}}} ] }.


% As an hex-package dependency:
%
% (works if the package uses a specific hook script, see
% hex-compile-hook-script.sh, to compensate for the GNUmake* root files that the
% package archive will not include at their location)
%
%{deps, [ {myriad, "MYRIAD_VERSION_FOR_REBAR"} ] }.


% Include directories found in INC:
{erl_opts, [ {d,myriad_debug_mode}, {d,seaplus_debug_mode}, debug_info, {debug_info_key,"DEBUG_KEY_FOR_REBAR"}, report_warnings, warn_export_all, warn_export_vars, warn_shadow_vars, warn_obsolete_guards, warn_unused_import, warnings_as_errors, {parse_transform,seaplus_parse_transform}, INCS_FOR_REBAR, {d,seaplus_root,"_build/default/lib/seaplus/"} ]}.


% Bootstrapped modules (from BOOTSTRAP_MODULES):
{erl_first_files, [ FIRST_FILES_FOR_REBAR ]}.


% (hooks needed, for example to create the include symlinks and for the build
% itself)
%
% Previously 'MYRIAD_REBAR_PROFILE=${REBAR_PROFILE}' was added, yet
% REBAR_PROFILE is actually not set, so we rely on our default value instead.
%

% Hiding and restoring the source of the Seaplus parse transform and copying
% around explicitly its right BEAM file is certainly a ugly hack, yet it is the
% only way that we found to prevent rebar3 from attempting to rebuild it
% (whereas it is already perfectly fine) with options that are not ours,
% resulting in having it fail later when applied in turn (to, for example,
% seaplus.erl), short of having been parse-transformed by its Myriad
% counterpart (indeed calls to the 'table' pseudo-module remain in this
% unfortunately updated seaplus_parse_transform.beam)
%
% We also transfer the BEAM of the Seaplus parse transform to the right
% directory, depending on whether Seaplus is built by itself or as a dependency.
%
{pre_hooks,  [ {compile, "make rebar3-bulletproof-compile-pre-hook REBAR_HOOK_EXTRA_OPTS='--hiding-for-rebar --verbose'"} ]}.

{post_hooks, [ {compile, "make rebar3-bulletproof-compile-post-hook REBAR_HOOK_EXTRA_OPTS='--hiding-for-rebar --verbose'"} ]}.



% For release generation:
%
% (defaults are for the development mode)
%
% With relx, only direct dependencies need to be listed, and version constraints
% can be used, instead of exact, specific versions.
%
{relx, [

  {release, {seaplus_release, "VERSION_FOR_REBAR"},
			% myriad thus implied:
			[sasl, seaplus]},

  %{sys_config, "./config/sys.config"},
  %{vm_args, "./config/vm.args"},

  % Base, development version:
  {dev_mode, true},
  {include_erts, false},

  {extended_start_script, true},
  {include_src, false}

]}.


{profiles, [

  % Production mode (the default one when used as a dependency):
  {prod, [

	% Like for the default profile, except for removed {d,myriad_debug_mode} and
	% {d,seaplus_debug_mode}, added {d,exec_target_is_production} and modified
	% seaplus_root, for a test to be run from 'seaplus/test/c-test':
	%
	{erl_opts, [ {d,exec_target_is_production}, debug_info, {debug_info_key,"DEBUG_KEY_FOR_REBAR"}, report_warnings, warn_export_all, warn_export_vars, warn_shadow_vars, warn_obsolete_guards, warn_unused_import, warnings_as_errors, {parse_transform,seaplus_parse_transform}, INCS_FOR_REBAR, {d,seaplus_root,"_build/default/lib/seaplus/"} ]},

	% For the build makefiles:
	{env, [ { 'REBAR_PROFILE', "prod" } ] },

	{relx, [

	  % Not wanting the release to contain symlinks to applications:
	  {dev_mode, false},

	  % Creating a full target system:
	  {include_erts, true},

	  {extended_start_script, true},
	  {include_src, false}

	]} ] }

  % No test profile currently needed.

]}.


% For Hex packages (see https://hex.pm/):
%
% (use 'rebar3 update' to enable the hex plugin)
%
{plugins, [rebar3_hex]}.